services:
  - type: web
    name: n8n
    plan: free
    runtime: image
    image:
      url: docker.io/n8nio/n8n:latest
    healthCheckPath: /healthz
    autoDeploy: false
    envVars:
      # --- n8n basics ---
      - key: GENERIC_TIMEZONE
        value: Asia/Bangkok
      - key: N8N_LOG_LEVEL
        value: info
      - key: N8N_PROTOCOL
        value: https
      # Protect the UI
      - key: N8N_BASIC_AUTH_ACTIVE
        value: "true"
      - key: N8N_BASIC_AUTH_USER
        value: admin
      - key: N8N_BASIC_AUTH_PASSWORD
        generateValue: true
      # Required to save credentials
      - key: N8N_ENCRYPTION_KEY
        generateValue: true
      # --- Database: Render Postgres (free) ---
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_HOST
        fromDatabase:
          name: n8n-db
          property: host
      - key: DB_POSTGRESDB_PORT
        fromDatabase:
          name: n8n-db
          property: port
      - key: DB_POSTGRESDB_DATABASE
        fromDatabase:
          name: n8n-db
          property: database
      - key: DB_POSTGRESDB_USER
        fromDatabase:
          name: n8n-db
          property: user
      - key: DB_POSTGRESDB_PASSWORD
        fromDatabase:
          name: n8n-db
          property: password
      # SSL helps with hosted Postgres; disable strict CA to avoid cert issues
      - key: DB_POSTGRESDB_SSL_ENABLED
        value: "true"
      - key: DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED
        value: "false"
      # Set this AFTER first deploy to your actual URL, e.g. https://n8n-xyz.onrender.com/
      # - key: WEBHOOK_URL
      #   value: https://<your-app>.onrender.com/
databases:
  - name: n8n-db
    plan: free
    databaseName: n8n
    user: n8n_user
